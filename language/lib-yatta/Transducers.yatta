module Transducers exports filter as

# pred: function of one argument (element) returning boolean value
# init: function of zero arguments returning initial state
# step: function of two arguments (accumulator, element) returning new value of the accumulator
# complete: function of one argument (final state of accumulator) returning final return value
filter pred (init, step, complete) = let
  new_step = \acc val -> if pred val then step acc val else acc
in
  (\-> init, new_step, complete)
